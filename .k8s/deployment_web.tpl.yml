apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 2
  name: skore-ts-template
  namespace: skore-ts-template
spec:
  selector:
    matchLabels:
      name: skore-ts-template
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: skore-ts-template
    spec:
      containers:
        - env:
          envFrom:
            - secretRef:
                name: skore-ts-template-secret
                optional: false
            - configMapRef:
                name: skore-ts-template-map
                optional: false
          image: ##IMAGE##
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          name: skore-ts-template
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 14
            successThreshold: 2
            timeoutSeconds: 10
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      serviceAccount: k8s-service-account
      serviceAccountName: k8s-service-account
